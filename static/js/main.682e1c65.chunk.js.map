{"version":3,"sources":["../node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator/index.js","../node_modules/regenerator-runtime/runtime.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayLikeToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/unsupportedIterableToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral.js","core/helpers/segmentationHelper.ts","pipelines/helpers/webglHelper.ts","pipelines/webgl2/backgroundBlurStage.ts","pipelines/webgl2/resizingStage.ts","pipelines/webgl2/webgl2Pipeline.ts","pipelines/webgl2/softmaxStage.ts","pipelines/webgl2/jointBilateralFilterStage.ts","core/vanilla/pipeline.ts","core/vanilla/TFLite.ts","core/vanilla/blur.ts","core/vanilla/track.ts","index.tsx"],"names":["module","exports","runtime","undefined","Op","Object","prototype","hasOwn","hasOwnProperty","$Symbol","Symbol","iteratorSymbol","iterator","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","define","obj","key","value","defineProperty","enumerable","configurable","writable","err","wrap","innerFn","outerFn","self","tryLocsList","protoGenerator","Generator","generator","create","context","Context","_invoke","state","GenStateSuspendedStart","method","arg","GenStateExecuting","Error","GenStateCompleted","doneResult","delegate","delegateResult","maybeInvokeDelegate","ContinueSentinel","sent","_sent","dispatchException","abrupt","record","tryCatch","type","done","GenStateSuspendedYield","makeInvokeMethod","fn","call","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","this","getProto","getPrototypeOf","NativeIteratorPrototype","values","Gp","defineIteratorMethods","forEach","AsyncIterator","PromiseImpl","invoke","resolve","reject","result","__await","then","unwrapped","error","previousPromise","callInvokeWithMethodAndArg","TypeError","info","resultName","next","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","iterable","iteratorMethod","isNaN","length","i","constructor","displayName","isGeneratorFunction","genFun","ctor","name","mark","setPrototypeOf","__proto__","awrap","async","Promise","iter","toString","keys","object","reverse","pop","skipTempReset","prev","charAt","slice","stop","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","thrown","delegateYield","regeneratorRuntime","accidentalStrictMode","Function","asyncGeneratorStep","gen","_next","_throw","_asyncToGenerator","args","arguments","apply","_arrayLikeToArray","arr","len","arr2","Array","_slicedToArray","isArray","_arr","_n","_d","_e","_s","_i","o","minLen","n","from","test","_taggedTemplateLiteral","strings","raw","freeze","defineProperties","inputResolutions","glsl","String","createPiplelineStageProgram","gl","vertexShader","fragmentShader","positionBuffer","texCoordBuffer","program","createProgram","attachShader","linkProgram","getProgramParameter","LINK_STATUS","getProgramInfoLog","positionAttributeLocation","getAttribLocation","enableVertexAttribArray","bindBuffer","ARRAY_BUFFER","vertexAttribPointer","FLOAT","texCoordAttributeLocation","compileShader","shaderType","shaderSource","shader","createShader","getShaderParameter","COMPILE_STATUS","getShaderInfoLog","createTexture","internalformat","width","height","minFilter","NEAREST","magFilter","texture","bindTexture","TEXTURE_2D","texParameteri","TEXTURE_WRAP_S","CLAMP_TO_EDGE","TEXTURE_WRAP_T","TEXTURE_MIN_FILTER","TEXTURE_MAG_FILTER","texStorage2D","x","y","format","dest","a","buf","createBuffer","PIXEL_PACK_BUFFER","bufferData","byteLength","STREAM_READ","readPixels","getBufferSubDataAsync","deleteBuffer","target","buffer","srcByteOffset","dstBuffer","dstOffset","sync","fenceSync","SYNC_GPU_COMMANDS_COMPLETE","flush","clientWaitAsync","res","deleteSync","WAIT_FAILED","getBufferSubData","requestAnimationFrame","clientWaitSync","TIMEOUT_EXPIRED","buildBackgroundBlurStage","personMaskTexture","canvas","blurPass","fragmentShaderSource","scale","outputWidth","outputHeight","texelWidth","texelHeight","FRAGMENT_SHADER","inputFrameLocation","getUniformLocation","personMaskLocation","texelSizeLocation","texture1","RGBA8","LINEAR","texture2","frameBuffer1","createFramebuffer","bindFramebuffer","FRAMEBUFFER","framebufferTexture2D","COLOR_ATTACHMENT0","frameBuffer2","render","viewport","useProgram","uniform1i","activeTexture","TEXTURE1","uniform2f","drawArrays","TRIANGLE_STRIP","TEXTURE2","cleanUp","deleteFramebuffer","deleteTexture","deleteProgram","deleteShader","buildBlurPass","blendPass","vertexShaderSource","VERTEX_SHADER","blurredInputFrame","coverageLocation","updateCoverage","coverage","buildBlendPass","buildResizingStage","segmentationConfig","tflite","tfliteInputMemoryOffset","_getInputMemoryOffset","inputResolution","outputPixelCount","outputTexture","frameBuffer","outputPixels","Uint8Array","readPixelsAsync","RGBA","UNSIGNED_BYTE","tfliteIndex","outputIndex","HEAPF32","buildWebGL2Pipeline","video","backgroundConfig","addFrameEvent","videoWidth","videoHeight","frameWidth","frameHeight","segmentationWidth","segmentationHeight","getContext","vertexArray","createVertexArray","bindVertexArray","Float32Array","STATIC_DRAW","inputFrameTexture","segmentationTexture","resizingStage","loadSegmentationStage","tfliteOutputMemoryOffset","_getOutputMemoryOffset","inputLocation","inputTexture","RG32F","texSubImage2D","RG","buildSoftmaxStage","jointBilateralFilterStage","segmentationMaskLocation","stepLocation","radiusLocation","offsetLocation","sigmaTexelLocation","sigmaColorLocation","updateSigmaSpace","sigmaSpace","Math","max","step","sqrt","radius","offset","sigmaTexel","uniform1f","updateSigmaColor","sigmaColor","buildJointBilateralFilterStage","backgroundStage","clearColor","clear","COLOR_BUFFER_BIT","TEXTURE0","texImage2D","_runInference","updatePostProcessingConfig","postProcessingConfig","jointBilateralFilter","deleteVertexArray","pipeline","canvasOutput","renderRequestId","fps","durations","previousTime","beginTime","eventCount","frameCount","frameDurations","webglPipeline","time","Date","now","beginFrame","endFrame","cancelAnimationFrame","smoothSegmentationMask","lightWrapping","blendMode","getTFLite","loadTFLite","loadTFLiteModel","fetch","modelResponse","arrayBuffer","model","modelBufferOffset","_getModelBufferMemoryOffset","HEAPU8","set","_loadModel","createTFLiteSIMDModule","console","log","isSIMDSupported","createTFLiteModule","warn","blur","backend","setupVideo","constraints","frameRate","ideal","addEventListener","navigator","mediaDevices","getUserMedia","srcObject","document","getElementById"],"mappings":"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","file":"static/js/main.682e1c65.chunk.js","sourcesContent":["module.exports = require(\"regenerator-runtime\");\n","/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nvar runtime = (function (exports) {\n  \"use strict\";\n\n  var Op = Object.prototype;\n  var hasOwn = Op.hasOwnProperty;\n  var undefined; // More compressible than void 0.\n  var $Symbol = typeof Symbol === \"function\" ? Symbol : {};\n  var iteratorSymbol = $Symbol.iterator || \"@@iterator\";\n  var asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\";\n  var toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n\n  function define(obj, key, value) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n    return obj[key];\n  }\n  try {\n    // IE 8 has a broken Object.defineProperty that only works on DOM objects.\n    define({}, \"\");\n  } catch (err) {\n    define = function(obj, key, value) {\n      return obj[key] = value;\n    };\n  }\n\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;\n    var generator = Object.create(protoGenerator.prototype);\n    var context = new Context(tryLocsList || []);\n\n    // The ._invoke method unifies the implementations of the .next,\n    // .throw, and .return methods.\n    generator._invoke = makeInvokeMethod(innerFn, self, context);\n\n    return generator;\n  }\n  exports.wrap = wrap;\n\n  // Try/catch helper to minimize deoptimizations. Returns a completion\n  // record like context.tryEntries[i].completion. This interface could\n  // have been (and was previously) designed to take a closure to be\n  // invoked without arguments, but in all the cases we care about we\n  // already have an existing method we want to call, so there's no need\n  // to create a new function object. We can even get away with assuming\n  // the method takes exactly one argument, since that happens to be true\n  // in every case, so we don't have to touch the arguments object. The\n  // only additional allocation required is the completion record, which\n  // has a stable shape and so hopefully should be cheap to allocate.\n  function tryCatch(fn, obj, arg) {\n    try {\n      return { type: \"normal\", arg: fn.call(obj, arg) };\n    } catch (err) {\n      return { type: \"throw\", arg: err };\n    }\n  }\n\n  var GenStateSuspendedStart = \"suspendedStart\";\n  var GenStateSuspendedYield = \"suspendedYield\";\n  var GenStateExecuting = \"executing\";\n  var GenStateCompleted = \"completed\";\n\n  // Returning this object from the innerFn has the same effect as\n  // breaking out of the dispatch switch statement.\n  var ContinueSentinel = {};\n\n  // Dummy constructor functions that we use as the .constructor and\n  // .constructor.prototype properties for functions that return Generator\n  // objects. For full spec compliance, you may wish to configure your\n  // minifier not to mangle the names of these two functions.\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n\n  // This is a polyfill for %IteratorPrototype% for environments that\n  // don't natively support it.\n  var IteratorPrototype = {};\n  IteratorPrototype[iteratorSymbol] = function () {\n    return this;\n  };\n\n  var getProto = Object.getPrototypeOf;\n  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n  if (NativeIteratorPrototype &&\n      NativeIteratorPrototype !== Op &&\n      hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {\n    // This environment has a native %IteratorPrototype%; use it instead\n    // of the polyfill.\n    IteratorPrototype = NativeIteratorPrototype;\n  }\n\n  var Gp = GeneratorFunctionPrototype.prototype =\n    Generator.prototype = Object.create(IteratorPrototype);\n  GeneratorFunction.prototype = Gp.constructor = GeneratorFunctionPrototype;\n  GeneratorFunctionPrototype.constructor = GeneratorFunction;\n  GeneratorFunction.displayName = define(\n    GeneratorFunctionPrototype,\n    toStringTagSymbol,\n    \"GeneratorFunction\"\n  );\n\n  // Helper for defining the .next, .throw, and .return methods of the\n  // Iterator interface in terms of a single ._invoke method.\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function(method) {\n      define(prototype, method, function(arg) {\n        return this._invoke(method, arg);\n      });\n    });\n  }\n\n  exports.isGeneratorFunction = function(genFun) {\n    var ctor = typeof genFun === \"function\" && genFun.constructor;\n    return ctor\n      ? ctor === GeneratorFunction ||\n        // For the native GeneratorFunction constructor, the best we can\n        // do is to check its .name property.\n        (ctor.displayName || ctor.name) === \"GeneratorFunction\"\n      : false;\n  };\n\n  exports.mark = function(genFun) {\n    if (Object.setPrototypeOf) {\n      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);\n    } else {\n      genFun.__proto__ = GeneratorFunctionPrototype;\n      define(genFun, toStringTagSymbol, \"GeneratorFunction\");\n    }\n    genFun.prototype = Object.create(Gp);\n    return genFun;\n  };\n\n  // Within the body of any async function, `await x` is transformed to\n  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test\n  // `hasOwn.call(value, \"__await\")` to determine if the yielded value is\n  // meant to be awaited.\n  exports.awrap = function(arg) {\n    return { __await: arg };\n  };\n\n  function AsyncIterator(generator, PromiseImpl) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n      if (record.type === \"throw\") {\n        reject(record.arg);\n      } else {\n        var result = record.arg;\n        var value = result.value;\n        if (value &&\n            typeof value === \"object\" &&\n            hasOwn.call(value, \"__await\")) {\n          return PromiseImpl.resolve(value.__await).then(function(value) {\n            invoke(\"next\", value, resolve, reject);\n          }, function(err) {\n            invoke(\"throw\", err, resolve, reject);\n          });\n        }\n\n        return PromiseImpl.resolve(value).then(function(unwrapped) {\n          // When a yielded Promise is resolved, its final value becomes\n          // the .value of the Promise<{value,done}> result for the\n          // current iteration.\n          result.value = unwrapped;\n          resolve(result);\n        }, function(error) {\n          // If a rejected Promise was yielded, throw the rejection back\n          // into the async generator function so it can be handled there.\n          return invoke(\"throw\", error, resolve, reject);\n        });\n      }\n    }\n\n    var previousPromise;\n\n    function enqueue(method, arg) {\n      function callInvokeWithMethodAndArg() {\n        return new PromiseImpl(function(resolve, reject) {\n          invoke(method, arg, resolve, reject);\n        });\n      }\n\n      return previousPromise =\n        // If enqueue has been called before, then we want to wait until\n        // all previous Promises have been resolved before calling invoke,\n        // so that results are always delivered in the correct order. If\n        // enqueue has not been called before, then it is important to\n        // call invoke immediately, without waiting on a callback to fire,\n        // so that the async generator function has the opportunity to do\n        // any necessary setup in a predictable way. This predictability\n        // is why the Promise constructor synchronously invokes its\n        // executor callback, and why async functions synchronously\n        // execute code before the first await. Since we implement simple\n        // async functions in terms of async generators, it is especially\n        // important to get this right, even though it requires care.\n        previousPromise ? previousPromise.then(\n          callInvokeWithMethodAndArg,\n          // Avoid propagating failures to Promises returned by later\n          // invocations of the iterator.\n          callInvokeWithMethodAndArg\n        ) : callInvokeWithMethodAndArg();\n    }\n\n    // Define the unified helper method that is used to implement .next,\n    // .throw, and .return (see defineIteratorMethods).\n    this._invoke = enqueue;\n  }\n\n  defineIteratorMethods(AsyncIterator.prototype);\n  AsyncIterator.prototype[asyncIteratorSymbol] = function () {\n    return this;\n  };\n  exports.AsyncIterator = AsyncIterator;\n\n  // Note that simple async functions are implemented on top of\n  // AsyncIterator objects; they just return a Promise for the value of\n  // the final result produced by the iterator.\n  exports.async = function(innerFn, outerFn, self, tryLocsList, PromiseImpl) {\n    if (PromiseImpl === void 0) PromiseImpl = Promise;\n\n    var iter = new AsyncIterator(\n      wrap(innerFn, outerFn, self, tryLocsList),\n      PromiseImpl\n    );\n\n    return exports.isGeneratorFunction(outerFn)\n      ? iter // If outerFn is a generator, return the full iterator.\n      : iter.next().then(function(result) {\n          return result.done ? result.value : iter.next();\n        });\n  };\n\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = GenStateSuspendedStart;\n\n    return function invoke(method, arg) {\n      if (state === GenStateExecuting) {\n        throw new Error(\"Generator is already running\");\n      }\n\n      if (state === GenStateCompleted) {\n        if (method === \"throw\") {\n          throw arg;\n        }\n\n        // Be forgiving, per 25.3.3.3.3 of the spec:\n        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume\n        return doneResult();\n      }\n\n      context.method = method;\n      context.arg = arg;\n\n      while (true) {\n        var delegate = context.delegate;\n        if (delegate) {\n          var delegateResult = maybeInvokeDelegate(delegate, context);\n          if (delegateResult) {\n            if (delegateResult === ContinueSentinel) continue;\n            return delegateResult;\n          }\n        }\n\n        if (context.method === \"next\") {\n          // Setting context._sent for legacy support of Babel's\n          // function.sent implementation.\n          context.sent = context._sent = context.arg;\n\n        } else if (context.method === \"throw\") {\n          if (state === GenStateSuspendedStart) {\n            state = GenStateCompleted;\n            throw context.arg;\n          }\n\n          context.dispatchException(context.arg);\n\n        } else if (context.method === \"return\") {\n          context.abrupt(\"return\", context.arg);\n        }\n\n        state = GenStateExecuting;\n\n        var record = tryCatch(innerFn, self, context);\n        if (record.type === \"normal\") {\n          // If an exception is thrown from innerFn, we leave state ===\n          // GenStateExecuting and loop back for another invocation.\n          state = context.done\n            ? GenStateCompleted\n            : GenStateSuspendedYield;\n\n          if (record.arg === ContinueSentinel) {\n            continue;\n          }\n\n          return {\n            value: record.arg,\n            done: context.done\n          };\n\n        } else if (record.type === \"throw\") {\n          state = GenStateCompleted;\n          // Dispatch the exception by looping back around to the\n          // context.dispatchException(context.arg) call above.\n          context.method = \"throw\";\n          context.arg = record.arg;\n        }\n      }\n    };\n  }\n\n  // Call delegate.iterator[context.method](context.arg) and handle the\n  // result, either by returning a { value, done } result from the\n  // delegate iterator, or by modifying context.method and context.arg,\n  // setting context.delegate to null, and returning the ContinueSentinel.\n  function maybeInvokeDelegate(delegate, context) {\n    var method = delegate.iterator[context.method];\n    if (method === undefined) {\n      // A .throw or .return when the delegate iterator has no .throw\n      // method always terminates the yield* loop.\n      context.delegate = null;\n\n      if (context.method === \"throw\") {\n        // Note: [\"return\"] must be used for ES3 parsing compatibility.\n        if (delegate.iterator[\"return\"]) {\n          // If the delegate iterator has a return method, give it a\n          // chance to clean up.\n          context.method = \"return\";\n          context.arg = undefined;\n          maybeInvokeDelegate(delegate, context);\n\n          if (context.method === \"throw\") {\n            // If maybeInvokeDelegate(context) changed context.method from\n            // \"return\" to \"throw\", let that override the TypeError below.\n            return ContinueSentinel;\n          }\n        }\n\n        context.method = \"throw\";\n        context.arg = new TypeError(\n          \"The iterator does not provide a 'throw' method\");\n      }\n\n      return ContinueSentinel;\n    }\n\n    var record = tryCatch(method, delegate.iterator, context.arg);\n\n    if (record.type === \"throw\") {\n      context.method = \"throw\";\n      context.arg = record.arg;\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    var info = record.arg;\n\n    if (! info) {\n      context.method = \"throw\";\n      context.arg = new TypeError(\"iterator result is not an object\");\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    if (info.done) {\n      // Assign the result of the finished delegate to the temporary\n      // variable specified by delegate.resultName (see delegateYield).\n      context[delegate.resultName] = info.value;\n\n      // Resume execution at the desired location (see delegateYield).\n      context.next = delegate.nextLoc;\n\n      // If context.method was \"throw\" but the delegate handled the\n      // exception, let the outer generator proceed normally. If\n      // context.method was \"next\", forget context.arg since it has been\n      // \"consumed\" by the delegate iterator. If context.method was\n      // \"return\", allow the original .return call to continue in the\n      // outer generator.\n      if (context.method !== \"return\") {\n        context.method = \"next\";\n        context.arg = undefined;\n      }\n\n    } else {\n      // Re-yield the result returned by the delegate method.\n      return info;\n    }\n\n    // The delegate iterator is finished, so forget it and continue with\n    // the outer generator.\n    context.delegate = null;\n    return ContinueSentinel;\n  }\n\n  // Define Generator.prototype.{next,throw,return} in terms of the\n  // unified ._invoke helper method.\n  defineIteratorMethods(Gp);\n\n  define(Gp, toStringTagSymbol, \"Generator\");\n\n  // A Generator should always return itself as the iterator object when the\n  // @@iterator function is called on it. Some browsers' implementations of the\n  // iterator prototype chain incorrectly implement this, causing the Generator\n  // object to not be returned from this call. This ensures that doesn't happen.\n  // See https://github.com/facebook/regenerator/issues/274 for more details.\n  Gp[iteratorSymbol] = function() {\n    return this;\n  };\n\n  Gp.toString = function() {\n    return \"[object Generator]\";\n  };\n\n  function pushTryEntry(locs) {\n    var entry = { tryLoc: locs[0] };\n\n    if (1 in locs) {\n      entry.catchLoc = locs[1];\n    }\n\n    if (2 in locs) {\n      entry.finallyLoc = locs[2];\n      entry.afterLoc = locs[3];\n    }\n\n    this.tryEntries.push(entry);\n  }\n\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\";\n    delete record.arg;\n    entry.completion = record;\n  }\n\n  function Context(tryLocsList) {\n    // The root entry object (effectively a try statement without a catch\n    // or a finally block) gives us a place to store values thrown from\n    // locations where there is no enclosing try statement.\n    this.tryEntries = [{ tryLoc: \"root\" }];\n    tryLocsList.forEach(pushTryEntry, this);\n    this.reset(true);\n  }\n\n  exports.keys = function(object) {\n    var keys = [];\n    for (var key in object) {\n      keys.push(key);\n    }\n    keys.reverse();\n\n    // Rather than returning an object with a next method, we keep\n    // things simple and return the next function itself.\n    return function next() {\n      while (keys.length) {\n        var key = keys.pop();\n        if (key in object) {\n          next.value = key;\n          next.done = false;\n          return next;\n        }\n      }\n\n      // To avoid creating an additional object, we just hang the .value\n      // and .done properties off the next function object itself. This\n      // also ensures that the minifier will not anonymize the function.\n      next.done = true;\n      return next;\n    };\n  };\n\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n      if (iteratorMethod) {\n        return iteratorMethod.call(iterable);\n      }\n\n      if (typeof iterable.next === \"function\") {\n        return iterable;\n      }\n\n      if (!isNaN(iterable.length)) {\n        var i = -1, next = function next() {\n          while (++i < iterable.length) {\n            if (hasOwn.call(iterable, i)) {\n              next.value = iterable[i];\n              next.done = false;\n              return next;\n            }\n          }\n\n          next.value = undefined;\n          next.done = true;\n\n          return next;\n        };\n\n        return next.next = next;\n      }\n    }\n\n    // Return an iterator with no values.\n    return { next: doneResult };\n  }\n  exports.values = values;\n\n  function doneResult() {\n    return { value: undefined, done: true };\n  }\n\n  Context.prototype = {\n    constructor: Context,\n\n    reset: function(skipTempReset) {\n      this.prev = 0;\n      this.next = 0;\n      // Resetting context._sent for legacy support of Babel's\n      // function.sent implementation.\n      this.sent = this._sent = undefined;\n      this.done = false;\n      this.delegate = null;\n\n      this.method = \"next\";\n      this.arg = undefined;\n\n      this.tryEntries.forEach(resetTryEntry);\n\n      if (!skipTempReset) {\n        for (var name in this) {\n          // Not sure about the optimal order of these conditions:\n          if (name.charAt(0) === \"t\" &&\n              hasOwn.call(this, name) &&\n              !isNaN(+name.slice(1))) {\n            this[name] = undefined;\n          }\n        }\n      }\n    },\n\n    stop: function() {\n      this.done = true;\n\n      var rootEntry = this.tryEntries[0];\n      var rootRecord = rootEntry.completion;\n      if (rootRecord.type === \"throw\") {\n        throw rootRecord.arg;\n      }\n\n      return this.rval;\n    },\n\n    dispatchException: function(exception) {\n      if (this.done) {\n        throw exception;\n      }\n\n      var context = this;\n      function handle(loc, caught) {\n        record.type = \"throw\";\n        record.arg = exception;\n        context.next = loc;\n\n        if (caught) {\n          // If the dispatched exception was caught by a catch block,\n          // then let that catch block handle the exception normally.\n          context.method = \"next\";\n          context.arg = undefined;\n        }\n\n        return !! caught;\n      }\n\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        var record = entry.completion;\n\n        if (entry.tryLoc === \"root\") {\n          // Exception thrown outside of any try block that could handle\n          // it, so set the completion value of the entire function to\n          // throw the exception.\n          return handle(\"end\");\n        }\n\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\");\n          var hasFinally = hasOwn.call(entry, \"finallyLoc\");\n\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            } else if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            }\n\n          } else if (hasFinally) {\n            if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else {\n            throw new Error(\"try statement without catch or finally\");\n          }\n        }\n      }\n    },\n\n    abrupt: function(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc <= this.prev &&\n            hasOwn.call(entry, \"finallyLoc\") &&\n            this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n\n      if (finallyEntry &&\n          (type === \"break\" ||\n           type === \"continue\") &&\n          finallyEntry.tryLoc <= arg &&\n          arg <= finallyEntry.finallyLoc) {\n        // Ignore the finally entry if control is not jumping to a\n        // location outside the try/catch block.\n        finallyEntry = null;\n      }\n\n      var record = finallyEntry ? finallyEntry.completion : {};\n      record.type = type;\n      record.arg = arg;\n\n      if (finallyEntry) {\n        this.method = \"next\";\n        this.next = finallyEntry.finallyLoc;\n        return ContinueSentinel;\n      }\n\n      return this.complete(record);\n    },\n\n    complete: function(record, afterLoc) {\n      if (record.type === \"throw\") {\n        throw record.arg;\n      }\n\n      if (record.type === \"break\" ||\n          record.type === \"continue\") {\n        this.next = record.arg;\n      } else if (record.type === \"return\") {\n        this.rval = this.arg = record.arg;\n        this.method = \"return\";\n        this.next = \"end\";\n      } else if (record.type === \"normal\" && afterLoc) {\n        this.next = afterLoc;\n      }\n\n      return ContinueSentinel;\n    },\n\n    finish: function(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.finallyLoc === finallyLoc) {\n          this.complete(entry.completion, entry.afterLoc);\n          resetTryEntry(entry);\n          return ContinueSentinel;\n        }\n      }\n    },\n\n    \"catch\": function(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n          if (record.type === \"throw\") {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n          return thrown;\n        }\n      }\n\n      // The context.catch method must only be called with a location\n      // argument that corresponds to a known catch block.\n      throw new Error(\"illegal catch attempt\");\n    },\n\n    delegateYield: function(iterable, resultName, nextLoc) {\n      this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      };\n\n      if (this.method === \"next\") {\n        // Deliberately forget the last sent value so that we don't\n        // accidentally pass it on to the delegate.\n        this.arg = undefined;\n      }\n\n      return ContinueSentinel;\n    }\n  };\n\n  // Regardless of whether this script is executing as a CommonJS module\n  // or not, return the runtime object so that we can declare the variable\n  // regeneratorRuntime in the outer scope, which allows this module to be\n  // injected easily by `bin/regenerator --include-runtime script.js`.\n  return exports;\n\n}(\n  // If this script is executing as a CommonJS module, use module.exports\n  // as the regeneratorRuntime namespace. Otherwise create a new empty\n  // object. Either way, the resulting object will be used to initialize\n  // the regeneratorRuntime variable at the top of this file.\n  typeof module === \"object\" ? module.exports : {}\n));\n\ntry {\n  regeneratorRuntime = runtime;\n} catch (accidentalStrictMode) {\n  // This module should not be running in strict mode, so the above\n  // assignment should always work unless something is misconfigured. Just\n  // in case runtime.js accidentally runs in strict mode, we can escape\n  // strict mode using a global Function call. This could conceivably fail\n  // if a Content Security Policy forbids using Function, but in that case\n  // the proper solution is to fix the accidental strict mode problem. If\n  // you've misconfigured your bundler to force strict mode and applied a\n  // CSP to forbid Function, and you're not willing to fix either of those\n  // problems, please detail your unique predicament in a GitHub issue.\n  Function(\"r\", \"regeneratorRuntime = r\")(runtime);\n}\n","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}","export default function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}","import arrayWithHoles from \"@babel/runtime/helpers/esm/arrayWithHoles\";\nimport iterableToArrayLimit from \"@babel/runtime/helpers/esm/iterableToArrayLimit\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableRest from \"@babel/runtime/helpers/esm/nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","import arrayLikeToArray from \"@babel/runtime/helpers/esm/arrayLikeToArray\";\nexport default function _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","export default function _taggedTemplateLiteral(strings, raw) {\n  if (!raw) {\n    raw = strings.slice(0);\n  }\n\n  return Object.freeze(Object.defineProperties(strings, {\n    raw: {\n      value: Object.freeze(raw)\n    }\n  }));\n}","export type SegmentationModel = 'meet'\nexport type SegmentationBackend = 'webgl' | 'wasm' | 'wasmSimd'\nexport type InputResolution = '256x144' | '160x96'\n\nexport const inputResolutions: {\n  [resolution in InputResolution]: [number, number]\n} = {\n  '256x144': [256, 144],\n  '160x96': [160, 96],\n}\n\nexport type PipelineName = 'webgl2'\n\nexport type SegmentationConfig = {\n  model: SegmentationModel\n  backend: SegmentationBackend\n  inputResolution: InputResolution\n  pipeline: PipelineName\n}\n\nexport function getTFLiteModelFileName(\n  model: SegmentationModel,\n  inputResolution: InputResolution\n) {\n  switch (model) {\n    case 'meet':\n      return inputResolution === '256x144' ? 'segm_full_v679' : 'segm_lite_v681'\n\n    default:\n      throw new Error(`No TFLite file for this segmentation model: ${model}`)\n  }\n}\n","/**\n * Use it along with boyswan.glsl-literal VSCode extension\n * to get GLSL syntax highlighting.\n * https://marketplace.visualstudio.com/items?itemName=boyswan.glsl-literal\n *\n * On VSCode OSS, boyswan.glsl-literal requires slevesque.shader extension\n * to be installed as well.\n * https://marketplace.visualstudio.com/items?itemName=slevesque.shader\n */\nexport const glsl = String.raw\n\nexport function createPiplelineStageProgram(\n  gl: WebGL2RenderingContext,\n  vertexShader: WebGLShader,\n  fragmentShader: WebGLShader,\n  positionBuffer: WebGLBuffer,\n  texCoordBuffer: WebGLBuffer\n) {\n  const program = createProgram(gl, vertexShader, fragmentShader)\n\n  const positionAttributeLocation = gl.getAttribLocation(program, 'a_position')\n  gl.enableVertexAttribArray(positionAttributeLocation)\n  gl.bindBuffer(gl.ARRAY_BUFFER, positionBuffer)\n  gl.vertexAttribPointer(positionAttributeLocation, 2, gl.FLOAT, false, 0, 0)\n\n  const texCoordAttributeLocation = gl.getAttribLocation(program, 'a_texCoord')\n  gl.enableVertexAttribArray(texCoordAttributeLocation)\n  gl.bindBuffer(gl.ARRAY_BUFFER, texCoordBuffer)\n  gl.vertexAttribPointer(texCoordAttributeLocation, 2, gl.FLOAT, false, 0, 0)\n\n  return program\n}\n\nexport function createProgram(\n  gl: WebGL2RenderingContext,\n  vertexShader: WebGLShader,\n  fragmentShader: WebGLShader\n) {\n  const program = gl.createProgram()!\n  gl.attachShader(program, vertexShader)\n  gl.attachShader(program, fragmentShader)\n  gl.linkProgram(program)\n  if (!gl.getProgramParameter(program, gl.LINK_STATUS)) {\n    throw new Error(\n      `Could not link WebGL program: ${gl.getProgramInfoLog(program)}`\n    )\n  }\n  return program\n}\n\nexport function compileShader(\n  gl: WebGL2RenderingContext,\n  shaderType: number,\n  shaderSource: string\n) {\n  const shader = gl.createShader(shaderType)!\n  gl.shaderSource(shader, shaderSource)\n  gl.compileShader(shader)\n  if (!gl.getShaderParameter(shader, gl.COMPILE_STATUS)) {\n    throw new Error(`Could not compile shader: ${gl.getShaderInfoLog(shader)}`)\n  }\n  return shader\n}\n\nexport function createTexture(\n  gl: WebGL2RenderingContext,\n  internalformat: number,\n  width: number,\n  height: number,\n  minFilter = gl.NEAREST,\n  magFilter = gl.NEAREST\n) {\n  const texture = gl.createTexture()\n  gl.bindTexture(gl.TEXTURE_2D, texture)\n  gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE)\n  gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE)\n  gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, minFilter)\n  gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, magFilter)\n  gl.texStorage2D(gl.TEXTURE_2D, 1, internalformat, width, height)\n  return texture\n}\n\nexport async function readPixelsAsync(\n  gl: WebGL2RenderingContext,\n  x: number,\n  y: number,\n  width: number,\n  height: number,\n  format: number,\n  type: number,\n  dest: ArrayBufferView\n) {\n  const buf = gl.createBuffer()!\n  gl.bindBuffer(gl.PIXEL_PACK_BUFFER, buf)\n  gl.bufferData(gl.PIXEL_PACK_BUFFER, dest.byteLength, gl.STREAM_READ)\n  gl.readPixels(x, y, width, height, format, type, 0)\n  gl.bindBuffer(gl.PIXEL_PACK_BUFFER, null)\n\n  await getBufferSubDataAsync(gl, gl.PIXEL_PACK_BUFFER, buf, 0, dest)\n\n  gl.deleteBuffer(buf)\n  return dest\n}\n\nasync function getBufferSubDataAsync(\n  gl: WebGL2RenderingContext,\n  target: number,\n  buffer: WebGLBuffer,\n  srcByteOffset: number,\n  dstBuffer: ArrayBufferView,\n  dstOffset?: number,\n  length?: number\n) {\n  const sync = gl.fenceSync(gl.SYNC_GPU_COMMANDS_COMPLETE, 0)!\n  gl.flush()\n  const res = await clientWaitAsync(gl, sync)\n  gl.deleteSync(sync)\n\n  if (res !== gl.WAIT_FAILED) {\n    gl.bindBuffer(target, buffer)\n    gl.getBufferSubData(target, srcByteOffset, dstBuffer, dstOffset, length)\n    gl.bindBuffer(target, null)\n  }\n}\n\nfunction clientWaitAsync(gl: WebGL2RenderingContext, sync: WebGLSync) {\n  return new Promise<number>((resolve) => {\n    function test() {\n      const res = gl.clientWaitSync(sync, 0, 0)\n      if (res === gl.WAIT_FAILED) {\n        resolve(res)\n        return\n      }\n      if (res === gl.TIMEOUT_EXPIRED) {\n        requestAnimationFrame(test)\n        return\n      }\n      resolve(res)\n    }\n    requestAnimationFrame(test)\n  })\n}\n","import {\n  compileShader,\n  createPiplelineStageProgram,\n  createTexture,\n  glsl\n} from '../helpers/webglHelper'\n\nexport type BackgroundBlurStage = {\n  render(): void\n  updateCoverage(coverage: [number, number]): void\n  cleanUp(): void\n}\n\nexport function buildBackgroundBlurStage(\n  gl: WebGL2RenderingContext,\n  vertexShader: WebGLShader,\n  positionBuffer: WebGLBuffer,\n  texCoordBuffer: WebGLBuffer,\n  personMaskTexture: WebGLTexture,\n  canvas: HTMLCanvasElement\n): BackgroundBlurStage {\n  const blurPass = buildBlurPass(\n    gl,\n    vertexShader,\n    positionBuffer,\n    texCoordBuffer,\n    personMaskTexture,\n    canvas\n  )\n  const blendPass = buildBlendPass(gl, positionBuffer, texCoordBuffer, canvas)\n\n  function render() {\n    blurPass.render()\n    blendPass.render()\n  }\n\n  function updateCoverage(coverage: [number, number]) {\n    blendPass.updateCoverage(coverage)\n  }\n\n  function cleanUp() {\n    blendPass.cleanUp()\n    blurPass.cleanUp()\n  }\n\n  return {\n    render,\n    updateCoverage,\n    cleanUp,\n  }\n}\n\nfunction buildBlurPass(\n  gl: WebGL2RenderingContext,\n  vertexShader: WebGLShader,\n  positionBuffer: WebGLBuffer,\n  texCoordBuffer: WebGLBuffer,\n  personMaskTexture: WebGLTexture,\n  canvas: HTMLCanvasElement\n) {\n  const fragmentShaderSource = glsl`#version 300 es\n\n    precision highp float;\n\n    uniform sampler2D u_inputFrame;\n    uniform sampler2D u_personMask;\n    uniform vec2 u_texelSize;\n\n    in vec2 v_texCoord;\n\n    out vec4 outColor;\n\n    const float offset[5] = float[](0.0, 1.0, 2.0, 3.0, 4.0);\n    const float weight[5] = float[](0.2270270270, 0.1945945946, 0.1216216216,\n      0.0540540541, 0.0162162162);\n\n    void main() {\n      vec4 centerColor = texture(u_inputFrame, v_texCoord);\n      float personMask = texture(u_personMask, v_texCoord).a;\n\n      vec4 frameColor = centerColor * weight[0] * (1.0 - personMask);\n\n      for (int i = 1; i < 5; i++) {\n        vec2 offset = vec2(offset[i]) * u_texelSize;\n\n        vec2 texCoord = v_texCoord + offset;\n        frameColor += texture(u_inputFrame, texCoord) * weight[i] *\n          (1.0 - texture(u_personMask, texCoord).a);\n\n        texCoord = v_texCoord - offset;\n        frameColor += texture(u_inputFrame, texCoord) * weight[i] *\n          (1.0 - texture(u_personMask, texCoord).a);\n      }\n      outColor = vec4(frameColor.rgb + (1.0 - frameColor.a) * centerColor.rgb, 1.0);\n    }\n  `\n\n  const scale = 0.4\n  const outputWidth = canvas.width * scale\n  const outputHeight = canvas.height * scale\n  const texelWidth = 1 / outputWidth\n  const texelHeight = 1 / outputHeight\n\n  const fragmentShader = compileShader(\n    gl,\n    gl.FRAGMENT_SHADER,\n    fragmentShaderSource\n  )\n  const program = createPiplelineStageProgram(\n    gl,\n    vertexShader,\n    fragmentShader,\n    positionBuffer,\n    texCoordBuffer\n  )\n  const inputFrameLocation = gl.getUniformLocation(program, 'u_inputFrame')\n  const personMaskLocation = gl.getUniformLocation(program, 'u_personMask')\n  const texelSizeLocation = gl.getUniformLocation(program, 'u_texelSize')\n  const texture1 = createTexture(\n    gl,\n    gl.RGBA8,\n    outputWidth,\n    outputHeight,\n    gl.NEAREST,\n    gl.LINEAR\n  )\n  const texture2 = createTexture(\n    gl,\n    gl.RGBA8,\n    outputWidth,\n    outputHeight,\n    gl.NEAREST,\n    gl.LINEAR\n  )\n\n  const frameBuffer1 = gl.createFramebuffer()\n  gl.bindFramebuffer(gl.FRAMEBUFFER, frameBuffer1)\n  gl.framebufferTexture2D(\n    gl.FRAMEBUFFER,\n    gl.COLOR_ATTACHMENT0,\n    gl.TEXTURE_2D,\n    texture1,\n    0\n  )\n\n  const frameBuffer2 = gl.createFramebuffer()\n  gl.bindFramebuffer(gl.FRAMEBUFFER, frameBuffer2)\n  gl.framebufferTexture2D(\n    gl.FRAMEBUFFER,\n    gl.COLOR_ATTACHMENT0,\n    gl.TEXTURE_2D,\n    texture2,\n    0\n  )\n\n  gl.useProgram(program)\n  gl.uniform1i(personMaskLocation, 1)\n\n  function render() {\n    gl.viewport(0, 0, outputWidth, outputHeight)\n    gl.useProgram(program)\n    gl.uniform1i(inputFrameLocation, 0)\n    gl.activeTexture(gl.TEXTURE1)\n    gl.bindTexture(gl.TEXTURE_2D, personMaskTexture)\n\n    for (let i = 0; i < 3; i++) {\n      gl.uniform2f(texelSizeLocation, 0, texelHeight)\n      gl.bindFramebuffer(gl.FRAMEBUFFER, frameBuffer1)\n      gl.drawArrays(gl.TRIANGLE_STRIP, 0, 4)\n\n      gl.activeTexture(gl.TEXTURE2)\n      gl.bindTexture(gl.TEXTURE_2D, texture1)\n      gl.uniform1i(inputFrameLocation, 2)\n\n      gl.uniform2f(texelSizeLocation, texelWidth, 0)\n      gl.bindFramebuffer(gl.FRAMEBUFFER, frameBuffer2)\n      gl.drawArrays(gl.TRIANGLE_STRIP, 0, 4)\n\n      gl.bindTexture(gl.TEXTURE_2D, texture2)\n    }\n  }\n\n  function cleanUp() {\n    gl.deleteFramebuffer(frameBuffer2)\n    gl.deleteFramebuffer(frameBuffer1)\n    gl.deleteTexture(texture2)\n    gl.deleteTexture(texture1)\n    gl.deleteProgram(program)\n    gl.deleteShader(fragmentShader)\n  }\n\n  return {\n    render,\n    cleanUp,\n  }\n}\n\nfunction buildBlendPass(\n  gl: WebGL2RenderingContext,\n  positionBuffer: WebGLBuffer,\n  texCoordBuffer: WebGLBuffer,\n  canvas: HTMLCanvasElement\n) {\n  const vertexShaderSource = glsl`#version 300 es\n\n    in vec2 a_position;\n    in vec2 a_texCoord;\n\n    out vec2 v_texCoord;\n\n    void main() {\n      // Flipping Y is required when rendering to canvas\n      gl_Position = vec4(a_position * vec2(1.0, -1.0), 0.0, 1.0);\n      v_texCoord = a_texCoord;\n    }\n  `\n\n  const fragmentShaderSource = glsl`#version 300 es\n\n    precision highp float;\n\n    uniform sampler2D u_inputFrame;\n    uniform sampler2D u_personMask;\n    uniform sampler2D u_blurredInputFrame;\n    uniform vec2 u_coverage;\n\n    in vec2 v_texCoord;\n\n    out vec4 outColor;\n\n    void main() {\n      vec3 color = texture(u_inputFrame, v_texCoord).rgb;\n      vec3 blurredColor = texture(u_blurredInputFrame, v_texCoord).rgb;\n      float personMask = texture(u_personMask, v_texCoord).a;\n      personMask = smoothstep(u_coverage.x, u_coverage.y, personMask);\n      outColor = vec4(mix(blurredColor, color, personMask), 1.0);\n    }\n  `\n\n  const { width: outputWidth, height: outputHeight } = canvas\n\n  const vertexShader = compileShader(gl, gl.VERTEX_SHADER, vertexShaderSource)\n  const fragmentShader = compileShader(\n    gl,\n    gl.FRAGMENT_SHADER,\n    fragmentShaderSource\n  )\n  const program = createPiplelineStageProgram(\n    gl,\n    vertexShader,\n    fragmentShader,\n    positionBuffer,\n    texCoordBuffer\n  )\n  const inputFrameLocation = gl.getUniformLocation(program, 'u_inputFrame')\n  const personMaskLocation = gl.getUniformLocation(program, 'u_personMask')\n  const blurredInputFrame = gl.getUniformLocation(\n    program,\n    'u_blurredInputFrame'\n  )\n  const coverageLocation = gl.getUniformLocation(program, 'u_coverage')\n\n  gl.useProgram(program)\n  gl.uniform1i(inputFrameLocation, 0)\n  gl.uniform1i(personMaskLocation, 1)\n  gl.uniform1i(blurredInputFrame, 2)\n  gl.uniform2f(coverageLocation, 0, 1)\n\n  function render() {\n    gl.viewport(0, 0, outputWidth, outputHeight)\n    gl.useProgram(program)\n    gl.bindFramebuffer(gl.FRAMEBUFFER, null)\n    gl.drawArrays(gl.TRIANGLE_STRIP, 0, 4)\n  }\n\n  function updateCoverage(coverage: [number, number]) {\n    gl.useProgram(program)\n    gl.uniform2f(coverageLocation, coverage[0], coverage[1])\n  }\n\n  function cleanUp() {\n    gl.deleteProgram(program)\n    gl.deleteShader(fragmentShader)\n    gl.deleteShader(vertexShader)\n  }\n\n  return {\n    render,\n    updateCoverage,\n    cleanUp,\n  }\n}\n","import {\n  inputResolutions,\n  SegmentationConfig\n} from '../../core/helpers/segmentationHelper'\nimport { TFLite } from '../../core/vanilla/TFLite'\nimport {\n  compileShader,\n  createPiplelineStageProgram,\n  createTexture,\n  glsl,\n  readPixelsAsync\n} from '../helpers/webglHelper'\n\nexport function buildResizingStage(\n  gl: WebGL2RenderingContext,\n  vertexShader: WebGLShader,\n  positionBuffer: WebGLBuffer,\n  texCoordBuffer: WebGLBuffer,\n  segmentationConfig: SegmentationConfig,\n  tflite: TFLite\n) {\n  const fragmentShaderSource = glsl`#version 300 es\n\n    precision highp float;\n\n    uniform sampler2D u_inputFrame;\n\n    in vec2 v_texCoord;\n\n    out vec4 outColor;\n\n    void main() {\n      outColor = texture(u_inputFrame, v_texCoord);\n    }\n  `\n\n  // TFLite memory will be accessed as float32\n  const tfliteInputMemoryOffset = tflite._getInputMemoryOffset() / 4\n\n  const [outputWidth, outputHeight] = inputResolutions[\n    segmentationConfig.inputResolution\n  ]\n  const outputPixelCount = outputWidth * outputHeight\n\n  const fragmentShader = compileShader(\n    gl,\n    gl.FRAGMENT_SHADER,\n    fragmentShaderSource\n  )\n  const program = createPiplelineStageProgram(\n    gl,\n    vertexShader,\n    fragmentShader,\n    positionBuffer,\n    texCoordBuffer\n  )\n  const inputFrameLocation = gl.getUniformLocation(program, 'u_inputFrame')\n  const outputTexture = createTexture(gl, gl.RGBA8, outputWidth, outputHeight)\n\n  const frameBuffer = gl.createFramebuffer()\n  gl.bindFramebuffer(gl.FRAMEBUFFER, frameBuffer)\n  gl.framebufferTexture2D(\n    gl.FRAMEBUFFER,\n    gl.COLOR_ATTACHMENT0,\n    gl.TEXTURE_2D,\n    outputTexture,\n    0\n  )\n  const outputPixels = new Uint8Array(outputPixelCount * 4)\n\n  gl.useProgram(program)\n  gl.uniform1i(inputFrameLocation, 0)\n\n  function render() {\n    gl.viewport(0, 0, outputWidth, outputHeight)\n    gl.useProgram(program)\n    gl.bindFramebuffer(gl.FRAMEBUFFER, frameBuffer)\n    gl.drawArrays(gl.TRIANGLE_STRIP, 0, 4)\n\n    // Downloads pixels asynchronously from GPU while rendering the current frame\n    readPixelsAsync(\n      gl,\n      0,\n      0,\n      outputWidth,\n      outputHeight,\n      gl.RGBA,\n      gl.UNSIGNED_BYTE,\n      outputPixels\n    )\n\n    for (let i = 0; i < outputPixelCount; i++) {\n      const tfliteIndex = tfliteInputMemoryOffset + i * 3\n      const outputIndex = i * 4\n      tflite.HEAPF32[tfliteIndex] = outputPixels[outputIndex] / 255\n      tflite.HEAPF32[tfliteIndex + 1] = outputPixels[outputIndex + 1] / 255\n      tflite.HEAPF32[tfliteIndex + 2] = outputPixels[outputIndex + 2] / 255\n    }\n  }\n\n  function cleanUp() {\n    gl.deleteFramebuffer(frameBuffer)\n    gl.deleteTexture(outputTexture)\n    gl.deleteProgram(program)\n    gl.deleteShader(fragmentShader)\n  }\n\n  return { render, cleanUp }\n}\n","import { BackgroundConfig } from '../../core/helpers/backgroundHelper'\nimport { PostProcessingConfig } from '../../core/helpers/postProcessingHelper'\nimport {\n  inputResolutions,\n  SegmentationConfig\n} from '../../core/helpers/segmentationHelper'\nimport { TFLite } from '../../core/vanilla/TFLite'\nimport { compileShader, createTexture, glsl } from '../helpers/webglHelper'\nimport {\n  BackgroundBlurStage,\n  buildBackgroundBlurStage\n} from './backgroundBlurStage'\nimport { buildJointBilateralFilterStage } from './jointBilateralFilterStage'\nimport { buildResizingStage } from './resizingStage'\nimport { buildSoftmaxStage } from './softmaxStage'\n\nexport function buildWebGL2Pipeline(\n  video: HTMLVideoElement,\n  backgroundConfig: BackgroundConfig,\n  segmentationConfig: SegmentationConfig,\n  canvas: HTMLCanvasElement,\n  tflite: TFLite,\n  addFrameEvent: () => void\n) {\n  const vertexShaderSource = glsl`#version 300 es\n\n    in vec2 a_position;\n    in vec2 a_texCoord;\n\n    out vec2 v_texCoord;\n\n    void main() {\n      gl_Position = vec4(a_position, 0.0, 1.0);\n      v_texCoord = a_texCoord;\n    }\n  `\n\n  const { videoWidth: width, videoHeight: height } = video;\n  const frameWidth: number = width ?? 0;\n  const frameHeight: number = height ?? 0;\n  const [segmentationWidth, segmentationHeight] = inputResolutions[\n    segmentationConfig.inputResolution\n  ]\n\n  const gl = canvas.getContext('webgl2')!\n\n  const vertexShader = compileShader(gl, gl.VERTEX_SHADER, vertexShaderSource)\n\n  const vertexArray = gl.createVertexArray()\n  gl.bindVertexArray(vertexArray)\n\n  const positionBuffer = gl.createBuffer()!\n  gl.bindBuffer(gl.ARRAY_BUFFER, positionBuffer)\n  gl.bufferData(\n    gl.ARRAY_BUFFER,\n    new Float32Array([-1.0, -1.0, 1.0, -1.0, -1.0, 1.0, 1.0, 1.0]),\n    gl.STATIC_DRAW\n  )\n\n  const texCoordBuffer = gl.createBuffer()!\n  gl.bindBuffer(gl.ARRAY_BUFFER, texCoordBuffer)\n  gl.bufferData(\n    gl.ARRAY_BUFFER,\n    new Float32Array([0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0]),\n    gl.STATIC_DRAW\n  )\n\n  // We don't use texStorage2D here because texImage2D seems faster\n  // to upload video texture than texSubImage2D even though the latter\n  // is supposed to be the recommended way:\n  // https://developer.mozilla.org/en-US/docs/Web/API/WebGL_API/WebGL_best_practices#use_texstorage_to_create_textures\n  const inputFrameTexture = gl.createTexture()\n  gl.bindTexture(gl.TEXTURE_2D, inputFrameTexture)\n  gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE)\n  gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE)\n  gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST)\n  gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST)\n\n  // TODO Rename segmentation and person mask to be more specific\n  const segmentationTexture = createTexture(\n    gl,\n    gl.RGBA8,\n    segmentationWidth,\n    segmentationHeight\n  )!\n  const personMaskTexture = createTexture(\n    gl,\n    gl.RGBA8,\n    frameWidth,\n    frameHeight\n  )!\n\n  const resizingStage = buildResizingStage(\n    gl,\n    vertexShader,\n    positionBuffer,\n    texCoordBuffer,\n    segmentationConfig,\n    tflite\n  )\n  const loadSegmentationStage = buildSoftmaxStage(\n    gl,\n    vertexShader,\n    positionBuffer,\n    texCoordBuffer,\n    segmentationConfig,\n    tflite,\n    segmentationTexture\n  )\n  const jointBilateralFilterStage = buildJointBilateralFilterStage(\n    gl,\n    vertexShader,\n    positionBuffer,\n    texCoordBuffer,\n    segmentationTexture,\n    segmentationConfig,\n    personMaskTexture,\n    canvas\n  )\n  const backgroundStage = buildBackgroundBlurStage(\n    gl,\n    vertexShader,\n    positionBuffer,\n    texCoordBuffer,\n    personMaskTexture,\n    canvas\n  )\n\n  async function render() {\n    gl.clearColor(0, 0, 0, 0)\n    gl.clear(gl.COLOR_BUFFER_BIT)\n\n    gl.activeTexture(gl.TEXTURE0)\n    gl.bindTexture(gl.TEXTURE_2D, inputFrameTexture)\n\n    // texImage2D seems faster than texSubImage2D to upload\n    // video texture\n    gl.texImage2D(\n      gl.TEXTURE_2D,\n      0,\n      gl.RGBA,\n      gl.RGBA,\n      gl.UNSIGNED_BYTE,\n      video\n    )\n\n    gl.bindVertexArray(vertexArray)\n\n    resizingStage.render()\n\n    addFrameEvent()\n\n    tflite._runInference()\n\n    addFrameEvent()\n\n    loadSegmentationStage.render()\n    jointBilateralFilterStage.render()\n    backgroundStage.render()\n  }\n\n  function updatePostProcessingConfig(\n    postProcessingConfig: PostProcessingConfig\n  ) {\n    jointBilateralFilterStage.updateSigmaSpace(\n      postProcessingConfig.jointBilateralFilter.sigmaSpace\n    )\n    jointBilateralFilterStage.updateSigmaColor(\n      postProcessingConfig.jointBilateralFilter.sigmaColor\n    )\n\n    const backgroundBlurStage = backgroundStage as BackgroundBlurStage\n    backgroundBlurStage.updateCoverage(postProcessingConfig.coverage)\n  }\n\n  function cleanUp() {\n    backgroundStage.cleanUp()\n    jointBilateralFilterStage.cleanUp()\n    loadSegmentationStage.cleanUp()\n    resizingStage.cleanUp()\n\n    gl.deleteTexture(personMaskTexture)\n    gl.deleteTexture(segmentationTexture)\n    gl.deleteTexture(inputFrameTexture)\n    gl.deleteBuffer(texCoordBuffer)\n    gl.deleteBuffer(positionBuffer)\n    gl.deleteVertexArray(vertexArray)\n    gl.deleteShader(vertexShader)\n  }\n\n  return { render, updatePostProcessingConfig, cleanUp }\n}\n","import {\n  inputResolutions,\n  SegmentationConfig\n} from '../../core/helpers/segmentationHelper'\nimport { TFLite } from '../../core/vanilla/TFLite'\nimport {\n  compileShader,\n  createPiplelineStageProgram,\n  createTexture,\n  glsl\n} from '../helpers/webglHelper'\n\nexport function buildSoftmaxStage(\n  gl: WebGL2RenderingContext,\n  vertexShader: WebGLShader,\n  positionBuffer: WebGLBuffer,\n  texCoordBuffer: WebGLBuffer,\n  segmentationConfig: SegmentationConfig,\n  tflite: TFLite,\n  outputTexture: WebGLTexture\n) {\n  const fragmentShaderSource = glsl`#version 300 es\n\n    precision highp float;\n\n    uniform sampler2D u_inputSegmentation;\n\n    in vec2 v_texCoord;\n\n    out vec4 outColor;\n\n    void main() {\n      vec2 segmentation = texture(u_inputSegmentation, v_texCoord).rg;\n      float shift = max(segmentation.r, segmentation.g);\n      float backgroundExp = exp(segmentation.r - shift);\n      float personExp = exp(segmentation.g - shift);\n      outColor = vec4(vec3(0.0), personExp / (backgroundExp + personExp));\n    }\n  `\n\n  // TFLite memory will be accessed as float32\n  const tfliteOutputMemoryOffset = tflite._getOutputMemoryOffset() / 4\n\n  const [segmentationWidth, segmentationHeight] = inputResolutions[\n    segmentationConfig.inputResolution\n  ]\n\n  const fragmentShader = compileShader(\n    gl,\n    gl.FRAGMENT_SHADER,\n    fragmentShaderSource\n  )\n  const program = createPiplelineStageProgram(\n    gl,\n    vertexShader,\n    fragmentShader,\n    positionBuffer,\n    texCoordBuffer\n  )\n  const inputLocation = gl.getUniformLocation(program, 'u_inputSegmentation')\n  const inputTexture = createTexture(\n    gl,\n    gl.RG32F,\n    segmentationWidth,\n    segmentationHeight\n  )\n\n  const frameBuffer = gl.createFramebuffer()\n  gl.bindFramebuffer(gl.FRAMEBUFFER, frameBuffer)\n  gl.framebufferTexture2D(\n    gl.FRAMEBUFFER,\n    gl.COLOR_ATTACHMENT0,\n    gl.TEXTURE_2D,\n    outputTexture,\n    0\n  )\n\n  gl.useProgram(program)\n  gl.uniform1i(inputLocation, 1)\n\n  function render() {\n    gl.viewport(0, 0, segmentationWidth, segmentationHeight)\n    gl.useProgram(program)\n    gl.activeTexture(gl.TEXTURE1)\n    gl.bindTexture(gl.TEXTURE_2D, inputTexture)\n    gl.texSubImage2D(\n      gl.TEXTURE_2D,\n      0,\n      0,\n      0,\n      segmentationWidth,\n      segmentationHeight,\n      gl.RG,\n      gl.FLOAT,\n      tflite.HEAPF32,\n      tfliteOutputMemoryOffset\n    )\n    gl.bindFramebuffer(gl.FRAMEBUFFER, frameBuffer)\n    gl.drawArrays(gl.TRIANGLE_STRIP, 0, 4)\n  }\n\n  function cleanUp() {\n    gl.deleteFramebuffer(frameBuffer)\n    gl.deleteTexture(inputTexture)\n    gl.deleteProgram(program)\n    gl.deleteShader(fragmentShader)\n  }\n\n  return { render, cleanUp }\n}\n","import {\n  inputResolutions,\n  SegmentationConfig,\n} from '../../core/helpers/segmentationHelper'\nimport {\n  compileShader,\n  createPiplelineStageProgram,\n  glsl,\n} from '../helpers/webglHelper'\n\nexport function buildJointBilateralFilterStage(\n  gl: WebGL2RenderingContext,\n  vertexShader: WebGLShader,\n  positionBuffer: WebGLBuffer,\n  texCoordBuffer: WebGLBuffer,\n  inputTexture: WebGLTexture,\n  segmentationConfig: SegmentationConfig,\n  outputTexture: WebGLTexture,\n  canvas: HTMLCanvasElement\n) {\n  const fragmentShaderSource = glsl`#version 300 es\n\n    precision highp float;\n\n    uniform sampler2D u_inputFrame;\n    uniform sampler2D u_segmentationMask;\n    uniform vec2 u_texelSize;\n    uniform float u_step;\n    uniform float u_radius;\n    uniform float u_offset;\n    uniform float u_sigmaTexel;\n    uniform float u_sigmaColor;\n\n    in vec2 v_texCoord;\n\n    out vec4 outColor;\n\n    float gaussian(float x, float sigma) {\n      float coeff = -0.5 / (sigma * sigma * 4.0 + 1.0e-6);\n      return exp((x * x) * coeff);\n    }\n\n    void main() {\n      vec2 centerCoord = v_texCoord;\n      vec3 centerColor = texture(u_inputFrame, centerCoord).rgb;\n      float newVal = 0.0;\n\n      float spaceWeight = 0.0;\n      float colorWeight = 0.0;\n      float totalWeight = 0.0;\n\n      // Subsample kernel space.\n      for (float i = -u_radius + u_offset; i <= u_radius; i += u_step) {\n        for (float j = -u_radius + u_offset; j <= u_radius; j += u_step) {\n          vec2 shift = vec2(j, i) * u_texelSize;\n          vec2 coord = vec2(centerCoord + shift);\n          vec3 frameColor = texture(u_inputFrame, coord).rgb;\n          float outVal = texture(u_segmentationMask, coord).a;\n\n          spaceWeight = gaussian(distance(centerCoord, coord), u_sigmaTexel);\n          colorWeight = gaussian(distance(centerColor, frameColor), u_sigmaColor);\n          totalWeight += spaceWeight * colorWeight;\n\n          newVal += spaceWeight * colorWeight * outVal;\n        }\n      }\n      newVal /= totalWeight;\n\n      outColor = vec4(vec3(0.0), newVal);\n    }\n  `\n\n  const [segmentationWidth, segmentationHeight] = inputResolutions[\n    segmentationConfig.inputResolution\n  ]\n  const { width: outputWidth, height: outputHeight } = canvas\n  const texelWidth = 1 / outputWidth\n  const texelHeight = 1 / outputHeight\n\n  const fragmentShader = compileShader(\n    gl,\n    gl.FRAGMENT_SHADER,\n    fragmentShaderSource\n  )\n  const program = createPiplelineStageProgram(\n    gl,\n    vertexShader,\n    fragmentShader,\n    positionBuffer,\n    texCoordBuffer\n  )\n  const inputFrameLocation = gl.getUniformLocation(program, 'u_inputFrame')\n  const segmentationMaskLocation = gl.getUniformLocation(\n    program,\n    'u_segmentationMask'\n  )\n  const texelSizeLocation = gl.getUniformLocation(program, 'u_texelSize')\n  const stepLocation = gl.getUniformLocation(program, 'u_step')\n  const radiusLocation = gl.getUniformLocation(program, 'u_radius')\n  const offsetLocation = gl.getUniformLocation(program, 'u_offset')\n  const sigmaTexelLocation = gl.getUniformLocation(program, 'u_sigmaTexel')\n  const sigmaColorLocation = gl.getUniformLocation(program, 'u_sigmaColor')\n\n  const frameBuffer = gl.createFramebuffer()\n  gl.bindFramebuffer(gl.FRAMEBUFFER, frameBuffer)\n  gl.framebufferTexture2D(\n    gl.FRAMEBUFFER,\n    gl.COLOR_ATTACHMENT0,\n    gl.TEXTURE_2D,\n    outputTexture,\n    0\n  )\n\n  gl.useProgram(program)\n  gl.uniform1i(inputFrameLocation, 0)\n  gl.uniform1i(segmentationMaskLocation, 1)\n  gl.uniform2f(texelSizeLocation, texelWidth, texelHeight)\n\n  // Ensures default values are configured to prevent infinite\n  // loop in fragment shader\n  updateSigmaSpace(0)\n  updateSigmaColor(0)\n\n  function render() {\n    gl.viewport(0, 0, outputWidth, outputHeight)\n    gl.useProgram(program)\n    gl.activeTexture(gl.TEXTURE1)\n    gl.bindTexture(gl.TEXTURE_2D, inputTexture)\n    gl.bindFramebuffer(gl.FRAMEBUFFER, frameBuffer)\n    gl.drawArrays(gl.TRIANGLE_STRIP, 0, 4)\n  }\n\n  function updateSigmaSpace(sigmaSpace: number) {\n    sigmaSpace *= Math.max(\n      outputWidth / segmentationWidth,\n      outputHeight / segmentationHeight\n    )\n\n    const kSparsityFactor = 0.66 // Higher is more sparse.\n    const sparsity = Math.max(1, Math.sqrt(sigmaSpace) * kSparsityFactor)\n    const step = sparsity\n    const radius = sigmaSpace\n    const offset = step > 1 ? step * 0.5 : 0\n    const sigmaTexel = Math.max(texelWidth, texelHeight) * sigmaSpace\n\n    gl.useProgram(program)\n    gl.uniform1f(stepLocation, step)\n    gl.uniform1f(radiusLocation, radius)\n    gl.uniform1f(offsetLocation, offset)\n    gl.uniform1f(sigmaTexelLocation, sigmaTexel)\n  }\n\n  function updateSigmaColor(sigmaColor: number) {\n    gl.useProgram(program)\n    gl.uniform1f(sigmaColorLocation, sigmaColor)\n  }\n\n  function cleanUp() {\n    gl.deleteFramebuffer(frameBuffer)\n    gl.deleteProgram(program)\n    gl.deleteShader(fragmentShader)\n  }\n\n  return { render, updateSigmaSpace, updateSigmaColor, cleanUp }\n}\n","import { buildWebGL2Pipeline } from '../../pipelines/webgl2/webgl2Pipeline';\nimport { BackgroundConfig } from '../helpers/backgroundHelper';\nimport { SegmentationConfig } from '../helpers/segmentationHelper';\nimport { TFLite } from './TFLite';\n\nfunction pipeline(\n  video: HTMLVideoElement,\n  canvasOutput: HTMLCanvasElement,\n  backgroundConfig: BackgroundConfig,\n  segmentationConfig: SegmentationConfig,\n  tflite: TFLite\n) {\n  let fps: number = 0;\n  let durations: number[] = [];\n  let previousTime: number = 0\n  let beginTime: number = 0\n  let eventCount: number = 0\n  let frameCount: number = 0\n  const frameDurations: number[] = []\n\n  // let interval: any;\n  let renderRequestId: number\n\n  let webglPipeline = buildWebGL2Pipeline(\n    video,\n    backgroundConfig,\n    segmentationConfig,\n    canvasOutput,\n    tflite,\n    addFrameEvent\n  );\n\n  webglPipeline.updatePostProcessingConfig({\n    smoothSegmentationMask: true,\n    jointBilateralFilter: { sigmaSpace: 1, sigmaColor: 0.1 },\n    coverage: [0.5, 0.75],\n    lightWrapping: 0.3,\n    blendMode: 'screen',\n  })\n\n  async function render() {\n    beginFrame()\n    try {\n      await webglPipeline.render()\n      endFrame()\n      renderRequestId = requestAnimationFrame(render)\n    } catch (error) {\n      if (renderRequestId) cancelAnimationFrame(renderRequestId)\n      webglPipeline.cleanUp()\n      throw error\n    }\n  }\n\n  function beginFrame() {\n    beginTime = Date.now()\n  }\n\n  function addFrameEvent() {\n    const time = Date.now()\n    frameDurations[eventCount] = time - beginTime\n    beginTime = time\n    eventCount++\n  }\n\n  function endFrame() {\n    const time = Date.now()\n    frameDurations[eventCount] = time - beginTime\n    frameCount++\n    if (time >= previousTime + 1000) {\n      fps = (frameCount * 1000) / (time - previousTime)\n      durations = frameDurations;\n      previousTime = time\n      frameCount = 0\n    }\n    eventCount = 0\n  }\n\n  render()\n  // interval = setInterval(() => {\n  //   renderRequestId = requestAnimationFrame(render)\n  // }, 1000 / 30)\n\n  return {\n    webglPipeline,\n    canvasOutput,\n    fps,\n    durations,\n  }\n}\n\nexport default pipeline;\n","declare function createTFLiteModule(): Promise<TFLite>\ndeclare function createTFLiteSIMDModule(): Promise<TFLite>\n\nexport interface TFLite extends EmscriptenModule {\n  _getModelBufferMemoryOffset(): number\n  _getInputMemoryOffset(): number\n  _getInputHeight(): number\n  _getInputWidth(): number\n  _getInputChannelCount(): number\n  _getOutputMemoryOffset(): number\n  _getOutputHeight(): number\n  _getOutputWidth(): number\n  _getOutputChannelCount(): number\n  _loadModel(bufferSize: number): number\n  _runInference(): number\n}\n\nexport async function getTFLite() {\n  let tflite: any;\n  let isSIMDSupported: boolean = true;\n\n  async function loadTFLite() {\n    try {\n      tflite = await createTFLiteSIMDModule();\n      console.log('WOOT! We\\'re using SIMD!')\n    } catch (error) {\n      isSIMDSupported = false;\n      tflite = await createTFLiteModule();\n      console.warn('Failed to create TFLite SIMD WebAssembly module.', error)\n    }\n  }\n\n  async function loadTFLiteModel() {\n    if (\n      !tflite //||\n      // (isSIMDSupported && !tfliteSIMD) ||\n      // (!isSIMDSupported && segmentationConfig.backend === 'wasmSimd')\n    ) {\n      return\n    }\n\n    const modelResponse = await fetch(\n      `https://volcomix.github.io/virtual-background/models/segm_lite_v681.tflite`\n      // `https://volcomix.github.io/virtual-background/models/segm_full_v679.tflite` // consider using this and the larger model when SIMD is available\n    )\n    const model = await modelResponse.arrayBuffer()\n    const modelBufferOffset = tflite._getModelBufferMemoryOffset()\n    tflite.HEAPU8.set(new Uint8Array(model), modelBufferOffset)\n    tflite._loadModel(model.byteLength)\n  }\n\n  await loadTFLite()\n  await loadTFLiteModel()\n\n  return { tflite, isSIMDSupported }\n}\n","import { BackgroundConfig } from '../helpers/backgroundHelper';\nimport { SegmentationConfig } from '../helpers/segmentationHelper';\nimport pipeline from './pipeline';\nimport { getTFLite, TFLite } from './TFLite';\n\nexport const blur = async (video: HTMLVideoElement, canvas: HTMLCanvasElement) => {\n  const { tflite } = await getTFLite();\n  const backgroundConfig: BackgroundConfig = { type: 'blur' };\n  const segmentationConfig: SegmentationConfig = {\n    model: 'meet',\n    backend: 'wasm',\n    inputResolution: '160x96',\n    // inputResolution: '256x144', // consider using this and the larger model when SIMD is available\n    pipeline: 'webgl2'\n  };\n  const { webglPipeline } = pipeline(video, canvas, backgroundConfig, segmentationConfig, tflite as TFLite);\n  webglPipeline.render();\n}\n","const setupVideo = (video: HTMLVideoElement, canvas: HTMLCanvasElement): Promise<void> => {\n  return new Promise(async (resolve, reject) => {\n    const width = 640\n    const height = 480\n\n    const constraints = {\n      video: {\n        width, height,\n        frameRate: { ideal: 30, max: 30 }\n      }\n    }\n    video.addEventListener('loadeddata', () => {\n      canvas.width = video.videoWidth as number;\n      canvas.height = video.videoHeight as number;\n      resolve()\n    });\n    video.srcObject = await navigator.mediaDevices.getUserMedia(constraints)\n  });\n}\n\nexport default setupVideo;\n","import { blur } from './core/vanilla/blur';\nimport setupVideo from './core/vanilla/track';\n\n(async () => {\n  const video = document.getElementById('input') as HTMLVideoElement;\n  const canvas = document.getElementById('output') as HTMLCanvasElement;\n  await setupVideo(video, canvas);\n  await blur(video, canvas);\n})();\n"],"sourceRoot":""}